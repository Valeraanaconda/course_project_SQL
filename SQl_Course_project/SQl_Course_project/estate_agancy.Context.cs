//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан по шаблону.
//
//     Изменения, вносимые в этот файл вручную, могут привести к непредвиденной работе приложения.
//     Изменения, вносимые в этот файл вручную, будут перезаписаны при повторном создании кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SQl_Course_project
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class Estate_agancyEntities1 : DbContext
    {
        public Estate_agancyEntities1()
            : base("name=Estate_agancyEntities1")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<apartment> apartment { get; set; }
        public virtual DbSet<client> client { get; set; }
        public virtual DbSet<deal_with_appartment> deal_with_appartment { get; set; }
        public virtual DbSet<deal_with_house> deal_with_house { get; set; }
        public virtual DbSet<house> house { get; set; }
        public virtual DbSet<worker_c> worker_c { get; set; }
    
        public virtual int Add_apartment(Nullable<double> area_ap, Nullable<int> number_of_rooms, Nullable<double> price, string owner_ap, string address_ap, Nullable<int> number_of_balconies, Nullable<int> cadastral_number, Nullable<int> state)
        {
            var area_apParameter = area_ap.HasValue ?
                new ObjectParameter("area_ap", area_ap) :
                new ObjectParameter("area_ap", typeof(double));
    
            var number_of_roomsParameter = number_of_rooms.HasValue ?
                new ObjectParameter("number_of_rooms", number_of_rooms) :
                new ObjectParameter("number_of_rooms", typeof(int));
    
            var priceParameter = price.HasValue ?
                new ObjectParameter("price", price) :
                new ObjectParameter("price", typeof(double));
    
            var owner_apParameter = owner_ap != null ?
                new ObjectParameter("owner_ap", owner_ap) :
                new ObjectParameter("owner_ap", typeof(string));
    
            var address_apParameter = address_ap != null ?
                new ObjectParameter("address_ap", address_ap) :
                new ObjectParameter("address_ap", typeof(string));
    
            var number_of_balconiesParameter = number_of_balconies.HasValue ?
                new ObjectParameter("number_of_balconies", number_of_balconies) :
                new ObjectParameter("number_of_balconies", typeof(int));
    
            var cadastral_numberParameter = cadastral_number.HasValue ?
                new ObjectParameter("cadastral_number", cadastral_number) :
                new ObjectParameter("cadastral_number", typeof(int));
    
            var stateParameter = state.HasValue ?
                new ObjectParameter("state", state) :
                new ObjectParameter("state", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Add_apartment", area_apParameter, number_of_roomsParameter, priceParameter, owner_apParameter, address_apParameter, number_of_balconiesParameter, cadastral_numberParameter, stateParameter);
        }
    
        public virtual int Add_client(string full_name, string passport_ID, string issued_by, Nullable<int> year_of_birth, Nullable<int> date_of_birth, Nullable<int> month_of_birth, string place_of_residence)
        {
            var full_nameParameter = full_name != null ?
                new ObjectParameter("Full_name", full_name) :
                new ObjectParameter("Full_name", typeof(string));
    
            var passport_IDParameter = passport_ID != null ?
                new ObjectParameter("passport_ID", passport_ID) :
                new ObjectParameter("passport_ID", typeof(string));
    
            var issued_byParameter = issued_by != null ?
                new ObjectParameter("issued_by", issued_by) :
                new ObjectParameter("issued_by", typeof(string));
    
            var year_of_birthParameter = year_of_birth.HasValue ?
                new ObjectParameter("year_of_birth", year_of_birth) :
                new ObjectParameter("year_of_birth", typeof(int));
    
            var date_of_birthParameter = date_of_birth.HasValue ?
                new ObjectParameter("date_of_birth", date_of_birth) :
                new ObjectParameter("date_of_birth", typeof(int));
    
            var month_of_birthParameter = month_of_birth.HasValue ?
                new ObjectParameter("month_of_birth", month_of_birth) :
                new ObjectParameter("month_of_birth", typeof(int));
    
            var place_of_residenceParameter = place_of_residence != null ?
                new ObjectParameter("place_of_residence", place_of_residence) :
                new ObjectParameter("place_of_residence", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Add_client", full_nameParameter, passport_IDParameter, issued_byParameter, year_of_birthParameter, date_of_birthParameter, month_of_birthParameter, place_of_residenceParameter);
        }
    
        public virtual int Add_deal_with_appartent(Nullable<int> cadastral_number, Nullable<double> area_ap, Nullable<int> number_of_balcones, Nullable<int> number_of_rooms, string customer, string saller, Nullable<double> price)
        {
            var cadastral_numberParameter = cadastral_number.HasValue ?
                new ObjectParameter("cadastral_number", cadastral_number) :
                new ObjectParameter("cadastral_number", typeof(int));
    
            var area_apParameter = area_ap.HasValue ?
                new ObjectParameter("area_ap", area_ap) :
                new ObjectParameter("area_ap", typeof(double));
    
            var number_of_balconesParameter = number_of_balcones.HasValue ?
                new ObjectParameter("number_of_balcones", number_of_balcones) :
                new ObjectParameter("number_of_balcones", typeof(int));
    
            var number_of_roomsParameter = number_of_rooms.HasValue ?
                new ObjectParameter("number_of_rooms", number_of_rooms) :
                new ObjectParameter("number_of_rooms", typeof(int));
    
            var customerParameter = customer != null ?
                new ObjectParameter("customer", customer) :
                new ObjectParameter("customer", typeof(string));
    
            var sallerParameter = saller != null ?
                new ObjectParameter("saller", saller) :
                new ObjectParameter("saller", typeof(string));
    
            var priceParameter = price.HasValue ?
                new ObjectParameter("price", price) :
                new ObjectParameter("price", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Add_deal_with_appartent", cadastral_numberParameter, area_apParameter, number_of_balconesParameter, number_of_roomsParameter, customerParameter, sallerParameter, priceParameter);
        }
    
        public virtual int Add_deal_with_house(Nullable<int> cadastral_number, Nullable<int> number_of_rooms, Nullable<int> number_of_floor, Nullable<double> area_h, string customer, string saller, Nullable<double> price)
        {
            var cadastral_numberParameter = cadastral_number.HasValue ?
                new ObjectParameter("cadastral_number", cadastral_number) :
                new ObjectParameter("cadastral_number", typeof(int));
    
            var number_of_roomsParameter = number_of_rooms.HasValue ?
                new ObjectParameter("number_of_rooms", number_of_rooms) :
                new ObjectParameter("number_of_rooms", typeof(int));
    
            var number_of_floorParameter = number_of_floor.HasValue ?
                new ObjectParameter("number_of_floor", number_of_floor) :
                new ObjectParameter("number_of_floor", typeof(int));
    
            var area_hParameter = area_h.HasValue ?
                new ObjectParameter("area_h", area_h) :
                new ObjectParameter("area_h", typeof(double));
    
            var customerParameter = customer != null ?
                new ObjectParameter("customer", customer) :
                new ObjectParameter("customer", typeof(string));
    
            var sallerParameter = saller != null ?
                new ObjectParameter("saller", saller) :
                new ObjectParameter("saller", typeof(string));
    
            var priceParameter = price.HasValue ?
                new ObjectParameter("price", price) :
                new ObjectParameter("price", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Add_deal_with_house", cadastral_numberParameter, number_of_roomsParameter, number_of_floorParameter, area_hParameter, customerParameter, sallerParameter, priceParameter);
        }
    
        public virtual int Add_house(Nullable<int> number_of_rooms, Nullable<int> number_of_floor, Nullable<int> area_h, Nullable<double> area_plot, string owner_h, string address_h, Nullable<int> cadastral_number, Nullable<int> state_h)
        {
            var number_of_roomsParameter = number_of_rooms.HasValue ?
                new ObjectParameter("number_of_rooms", number_of_rooms) :
                new ObjectParameter("number_of_rooms", typeof(int));
    
            var number_of_floorParameter = number_of_floor.HasValue ?
                new ObjectParameter("number_of_floor", number_of_floor) :
                new ObjectParameter("number_of_floor", typeof(int));
    
            var area_hParameter = area_h.HasValue ?
                new ObjectParameter("area_h", area_h) :
                new ObjectParameter("area_h", typeof(int));
    
            var area_plotParameter = area_plot.HasValue ?
                new ObjectParameter("area_plot", area_plot) :
                new ObjectParameter("area_plot", typeof(double));
    
            var owner_hParameter = owner_h != null ?
                new ObjectParameter("owner_h", owner_h) :
                new ObjectParameter("owner_h", typeof(string));
    
            var address_hParameter = address_h != null ?
                new ObjectParameter("address_h", address_h) :
                new ObjectParameter("address_h", typeof(string));
    
            var cadastral_numberParameter = cadastral_number.HasValue ?
                new ObjectParameter("cadastral_number", cadastral_number) :
                new ObjectParameter("cadastral_number", typeof(int));
    
            var state_hParameter = state_h.HasValue ?
                new ObjectParameter("state_h", state_h) :
                new ObjectParameter("state_h", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Add_house", number_of_roomsParameter, number_of_floorParameter, area_hParameter, area_plotParameter, owner_hParameter, address_hParameter, cadastral_numberParameter, state_hParameter);
        }
    
        public virtual int Add_worker(string position, Nullable<int> password, string full_name)
        {
            var positionParameter = position != null ?
                new ObjectParameter("position", position) :
                new ObjectParameter("position", typeof(string));
    
            var passwordParameter = password.HasValue ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(int));
    
            var full_nameParameter = full_name != null ?
                new ObjectParameter("full_name", full_name) :
                new ObjectParameter("full_name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Add_worker", positionParameter, passwordParameter, full_nameParameter);
        }
    
        public virtual int Delete_apaetament(Nullable<int> cadastral_number)
        {
            var cadastral_numberParameter = cadastral_number.HasValue ?
                new ObjectParameter("cadastral_number", cadastral_number) :
                new ObjectParameter("cadastral_number", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Delete_apaetament", cadastral_numberParameter);
        }
    
        public virtual int Delete_client(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Delete_client", idParameter);
        }
    
        public virtual int Delete_deal_with_appartment(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Delete_deal_with_appartment", idParameter);
        }
    
        public virtual int Delete_deal_with_house(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Delete_deal_with_house", idParameter);
        }
    
        public virtual int Delete_house(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Delete_house", idParameter);
        }
    
        public virtual int Delete_worker(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Delete_worker", idParameter);
        }
    }
}
